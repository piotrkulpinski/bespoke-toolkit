//
// Module - Grid
// -----------------------------------------------------------------------------

@import '../mixins/grid/container';
@import '../mixins/grid/row';
@import '../mixins/grid/column';

@if length($grid-breakpoints) > 1 {
  .container {
    margin-right: auto;
    margin-left: auto;
    width: 100%;

    @each $breakpoint, $opts in $grid-breakpoints {
      @include breakpoint($breakpoint) {
        @if (map-get($opts, 'container')) {
          $container: map-get($opts, 'container');
          $container-gutter: map-get($opts, 'container-gutter');

          @if (length($container) > 1) {
            @each $size, $value in $container {
              &--#{$size} {
                @include grid-container($container-gutter);
                @include grid-container-adaptive($value, $container-gutter);
              }
            }
          }

          @else {
            @include grid-container($container-gutter);
            @include grid-container-adaptive($container, $container-gutter);
          }
        }
      }
    }
  }

  .row {
    display: flex;
    flex-wrap: wrap;

    @each $breakpoint, $opts in $grid-breakpoints {
      @include breakpoint($breakpoint) {
        @if (map-get($opts, 'columns')) {
          @include grid-row($breakpoint, $opts);

          @if variable-exists(display-grid-row-alignment) {
            @include grid-row-alignment($breakpoint, $opts);
          }

          @if variable-exists(display-grid-row-valignment) {
            @include grid-row-valignment($breakpoint, $opts);
          }

          @if variable-exists(display-grid-row-order) {
            @include grid-row-order($breakpoint, $opts);
          }
        }
      }
    }
  }

  .column {
    width: calc(100% - var(--column-gutter));
    margin-left: calc(var(--column-gutter) * 0.5);
    margin-right: calc(var(--column-gutter) * 0.5);

    @each $breakpoint, $opts in $grid-breakpoints {
      @include breakpoint($breakpoint) {
        @if (map-get($opts, 'columns')) {
          @include grid-column-gutter($breakpoint, $opts);
          @include grid-column-width($breakpoint, $opts);
          @include grid-column-offset($breakpoint, $opts);

          @if variable-exists(display-grid-column-alignment) {
            @include grid-column-alignment($breakpoint, $opts);
          }

          @if variable-exists(display-grid-column-order) {
            @include grid-column-order($breakpoint, $opts);
          }
        }
      }
    }
  }
}

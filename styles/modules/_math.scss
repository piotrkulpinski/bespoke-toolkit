//
// Module - Math
// -----------------------------------------------------------------------------

/// Power

@function pow($number, $exponent) {
  @if (round($exponent) != $exponent) {
    @return exp($exponent * ln($number));
  }

  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
     $value: $value * $number;
    }
  } @else if $exponent < 0 {
    @for $i from 1 through -$exponent {
      $value: $value / $number;
    }
  }

  @return $value;
}


/// Factorial

@function factorial($value) {
  $result: 1;

  @if $value == 0 {
    @return $result;
  }

  @for $index from 1 through $value {
    $result: $result * $index;
  }

  @return $result;
}


/// Summation

@function summation($iteratee, $input, $initial: 0, $limit: 100) {
  $sum: 0;

  @for $index from $initial to $limit {
    $sum: $sum + call($iteratee, $input, $index);
  }

  @return $sum;
}


/// Maclaurin Expansion

@function exp-maclaurin($x, $n) {
  @return (pow($x, $n) / factorial($n));
}


/// Exponent

@function exp($value) {
  @return summation(get-function('exp-maclaurin'), $value, 0, 100);
}


/// Maclaurin logarithm

@function ln-maclaurin($x, $n) {
  @return (pow(-1, $n + 1) / $n) * (pow($x - 1, $n));
}


/// Logarithm

@function ln($value) {
  $ten-exp: 1;
  $ln-ten: 2.30258509;

  @while ($value > pow(10, $ten-exp)) {
    $ten-exp: $ten-exp + 1;
  }

  @return summation(get-function('ln-maclaurin'), $value / pow(10, $ten-exp), 1, 100) + $ten-exp * $ln-ten;
}


/// Absolute value

@function abs($number) {
  @if $number >= 0 {
    @return $number;
  }

  @return -1 * $number;
}
